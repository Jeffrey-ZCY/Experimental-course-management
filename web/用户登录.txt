用户登录
    1.数据库创建对应的用户表   tb_user
    2.前台页面
        登录页面    login.jsp
            用户校验 JS校验
                登录表单验证
                1.给登录按钮绑定点击事件
                2.获取用户姓名和密码的值
                3.判断姓名是否为空
                    如果姓名为空，提示用户（span标签赋值），并return
                4.判断密码是否为空
                    如果姓名为空，提示用户（span标签赋值），并return
                5.如果都不为空，手动提交表单
        首页  index.jsp
    3.后台实现
        登录功能
            思路
                1.接受客户端请求（接收参数：姓名、密码）
                2.非空校验
                    如果参数为空，通过消息模型对象返回结果（设置成功状态、设置提示信息、回显数据）
                    将消息模型对象设置到request作用域中，请求转发跳转到登录页面，return
                3.通过用户姓名查询用户对象
                4.判断用户对象是否为空
                    如果参数为空，通过消息模型对象返回结果（设置成功状态、设置提示信息、回显数据）
                    将消息模型对象设置到request作用域中，请求转发跳转到登录页面，return
                5.将数据库查询到的用户密码与前台传递的密码作比较
                    如果不相等，通过消息模型对象返回结果（设置成功状态、设置提示信息、回显数据）
                    将消息模型对象设置到request作用域中，请求转发跳转到登录页面
                    如果相等，表示登陆成功，将用户信息设置到session作用域中，重定向跳转到首页

            controller层（接受请求、响应结果）
                1.接受客户端请求（接收参数：姓名、密码）
                2.调用service层方法，返回返回消息模型对象
                3.判断消息模型的状态码
                    如果状态码失败
                        将消息模型对象设置到request作用域中，请求转发跳转到登录页面login.jsp
                    如果状态码成功
                        将消息模型的用户设置到session作用域，重定向到index.jsp

            service层（业务逻辑）
                1.参数非空判断
                    如果参数非空
                        将状态码、提示信息和回显数据设置到消息模型对象，返回消息模型对象
                2.调用mapper层的查询方法，通过用户名查询用户对象
                3.判断用户对象是否为空
                    如果为空，将状态码、提示信息和回显数据设置到消息模型对象，返回消息模型对象
                4.判断数据库查询到的用户密码与前台传递的密码作比较
                    如果不相等， 将状态码、提示信息和回显数据设置到消息模型对象，返回消息模型对象
                5.登录成功，将成功状态、提示信息、用户对象设置消息模型对象，并return

             mapper层（Dao层）
                定义对应的接口




分层思想（解： 高内聚低耦合）
    controller层
        接受请求
        （调用service层）
        响应结果
    service层
        业务逻辑判断
    mapper
        接口类
        mappper.xml     mybatis与数据库的相关操作
    util
        工具类（通用类/方法）
    entity
        JavaBean实体
    test
        测试类/方法



